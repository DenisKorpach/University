import random

def is_probably_prime(n, k):
    # Вычисляем s и d из разложения n-1 на степени 2
    if n == 2:
        return True
    
    s, d = 0, n - 1
    while d % 2 == 0:
        s += 1
        d //= 2
    
    print(f"s: {s}, d: {d}")
    # Проводим k раундов тестирования
    for _ in range(k):
        # Генерируем случайное a из диапазона (2, n-2)
        a = random.randint(2, n-1)
        x = pow(a, d)%n  # Быстрое возведение в степень
        
        # Повторяем s раз
        for _ in range(s):
            y = pow(x, 2)%n  # Быстрое возведение в квадрат
            
            # Если y равно 1 и x не равно 1 и n-1, то число составное
            if y == 1 and x != 1 and x != n-1:
                return False
            
            x = y
        
        # Если y не равно 1, то число составное
        if x != 1:
            return False
    
    # Если после k раундов число не оказалось составным, то оно вероятно простое
    return True

lst = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251]
for i in lst:
    n = i
    k = 10

    result = is_probably_prime(n, k)
    if result: print(f"число {n} простое")
    else: print("число составное")
